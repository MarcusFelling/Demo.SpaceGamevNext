{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "10453597584904578452"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "Application name - used as prefix for resource names"
      }
    },
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name"
      }
    },
    "branchName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Source branch of PR - passed in via pipeline for dev environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "appSku": {
      "type": "string",
      "defaultValue": "S2",
      "allowedValues": [
        "S1",
        "S2",
        "S3"
      ],
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "registryName": {
      "type": "string",
      "metadata": {
        "description": "Name of shared registry"
      }
    },
    "tag": {
      "type": "string",
      "metadata": {
        "description": "Container image tag - uses commit SHA passed in via pipeline"
      }
    },
    "registrySku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Shared registry SKU"
      }
    },
    "dbUserName": {
      "type": "string",
      "metadata": {
        "description": "Database user name"
      }
    },
    "dbPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Database password - passed in via GitHub secret"
      }
    },
    "devEnv": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean for Dev environments - Used in conditions for resources that are skipped in dev (deploy slots, app insights, etc)"
      }
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}-ACR-rg', parameters('appName'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-registry-{1}', parameters('appName'), uniqueString(format('{0}-ACR-rg', parameters('appName'))))]",
      "resourceGroup": "[format('{0}-ACR-rg', parameters('appName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "registry": {
            "value": "[parameters('registryName')]"
          },
          "registrySku": {
            "value": "[parameters('registrySku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "16685692010092363695"
            }
          },
          "parameters": {
            "registry": {
              "type": "string",
              "metadata": {
                "description": "Shared registry name"
              }
            },
            "registrySku": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "Shared registry SKU"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Primary location for resources"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2020-11-01-preview",
              "name": "[parameters('registry')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('registrySku')]"
              },
              "properties": {
                "adminUserEnabled": true
              }
            }
          ],
          "outputs": {
            "acrName": {
              "type": "string",
              "value": "[parameters('registry')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-ACR-rg', parameters('appName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-db-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))))]",
      "resourceGroup": "[format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sqlServerName": {
            "value": "[format('{0}-{1}-sql', parameters('appName'), parameters('environmentName'))]"
          },
          "dbName": {
            "value": "[format('{0}database', parameters('appName'))]"
          },
          "dbUserName": {
            "value": "[parameters('dbUserName')]"
          },
          "dbPassword": {
            "value": "[parameters('dbPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "4307441002076016622"
            }
          },
          "parameters": {
            "sqlServerName": {
              "type": "string",
              "metadata": {
                "description": "Name of SQL Server instance - default is %appName%-%environmentName%-sql"
              }
            },
            "dbName": {
              "type": "string",
              "metadata": {
                "description": "Name of database - default is %appName%database"
              }
            },
            "dbUserName": {
              "type": "string",
              "metadata": {
                "description": "Database user name"
              }
            },
            "dbPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Database password - passed in via GitHub secret"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Primary location for resources"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2020-08-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('dbName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 60,
                "storageAccountType": "GRS",
                "minCapacity": 1
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2020-08-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2019-06-01-preview",
              "name": "[parameters('sqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('dbUserName')]",
                "administratorLoginPassword": "[parameters('dbPassword')]",
                "version": "12.0"
              }
            }
          ],
          "outputs": {
            "sqlServerFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('dbName')]"
            },
            "userName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))).administratorLogin]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-{1}-rg', parameters('appName'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-webapp-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))))]",
      "resourceGroup": "[format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          },
          "branchName": {
            "value": "[parameters('branchName')]"
          },
          "appSku": {
            "value": "[parameters('appSku')]"
          },
          "registry": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.Resources/deployments', format('{0}-registry-{1}', parameters('appName'), uniqueString(format('{0}-ACR-rg', parameters('appName'))))), '2019-10-01').outputs.acrName.value]"
          },
          "tag": {
            "value": "[parameters('tag')]"
          },
          "devEnv": {
            "value": "[parameters('devEnv')]"
          },
          "sqlServer": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))), 'Microsoft.Resources/deployments', format('{0}-db-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))))), '2019-10-01').outputs.sqlServerFQDN.value]"
          },
          "dbName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))), 'Microsoft.Resources/deployments', format('{0}-db-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))))), '2019-10-01').outputs.databaseName.value]"
          },
          "dbUserName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))), 'Microsoft.Resources/deployments', format('{0}-db-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))))), '2019-10-01').outputs.userName.value]"
          },
          "dbPassword": {
            "value": "[parameters('dbPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "13727720290924493612"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string",
              "allowedValues": [
                "dev",
                "test",
                "prod"
              ],
              "metadata": {
                "description": "Environment name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Primary location for resources"
              }
            },
            "appName": {
              "type": "string",
              "metadata": {
                "description": "Application name - used as prefix for resource names"
              }
            },
            "branchName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Source branch of PR - passed in via pipeline for dev environment"
              }
            },
            "appSku": {
              "type": "string",
              "allowedValues": [
                "S1",
                "S2",
                "S3"
              ],
              "metadata": {
                "description": "App Service Plan SKU"
              }
            },
            "registry": {
              "type": "string",
              "metadata": {
                "description": "Name of shared registry"
              }
            },
            "tag": {
              "type": "string",
              "metadata": {
                "description": "Container image tag - uses commit SHA passed in via pipeline"
              }
            },
            "sqlServer": {
              "type": "string",
              "metadata": {
                "description": "Name of SQL Server instance - default is %appName%-%environmentName%-sql"
              }
            },
            "dbName": {
              "type": "string",
              "metadata": {
                "description": "Name of database - default is %appName%database"
              }
            },
            "dbUserName": {
              "type": "string",
              "metadata": {
                "description": "Database user name"
              }
            },
            "dbPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Database password - passed in via GitHub secret"
              }
            },
            "devEnv": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Boolean for Dev environments - Used in conditions for resources that are skipped in dev (deploy slots, app insights, etc)"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')), 'connectionstrings')]",
              "properties": {
                "DefaultConnection": {
                  "value": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2}@{3};Password={4};', parameters('sqlServer'), parameters('dbName'), parameters('dbUserName'), parameters('sqlServer'), parameters('dbPassword'))]",
                  "type": "SQLAzure"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')))]"
              ]
            },
            {
              "condition": "[not(parameters('devEnv'))]",
              "type": "Microsoft.Web/sites/slots",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')), 'swap')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-{1}-plan', parameters('appName'), parameters('environmentName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')))]",
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-{1}-plan', parameters('appName'), parameters('environmentName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-{1}-plan', parameters('appName'), parameters('environmentName'))]",
              "kind": "linux",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('appSku')]"
              },
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.ContainerRegistry/registries', parameters('registry')), '2020-11-01-preview').loginServer]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                      "value": "[listCredentials(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.ContainerRegistry/registries', parameters('registry')), '2020-11-01-preview').username]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                      "value": "[listCredentials(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.ContainerRegistry/registries', parameters('registry')), '2020-11-01-preview').passwords[0].value]"
                    },
                    {
                      "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                      "value": "false"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}/{1}:{2}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.ContainerRegistry/registries', parameters('registry')), '2020-11-01-preview').loginServer, parameters('appName'), parameters('tag'))]"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-{1}-plan', parameters('appName'), parameters('environmentName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-{1}-plan', parameters('appName'), parameters('environmentName')))]"
              ]
            },
            {
              "condition": "[not(parameters('devEnv'))]",
              "type": "Microsoft.Insights/components",
              "apiVersion": "2018-05-01-preview",
              "name": "[format('{0}-monitor', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')))]",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName'))))]": "Resource",
                "displayName": "AppInsightsComponent"
              },
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('appName'), parameters('environmentName'), parameters('branchName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', parameters('appName'), parameters('environmentName'))), 'Microsoft.Resources/deployments', format('{0}-db-{1}-{2}', parameters('appName'), parameters('environmentName'), uniqueString(format('{0}-{1}-rg', parameters('appName'), parameters('environmentName')))))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-ACR-rg', parameters('appName'))), 'Microsoft.Resources/deployments', format('{0}-registry-{1}', parameters('appName'), uniqueString(format('{0}-ACR-rg', parameters('appName')))))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-{1}-rg', parameters('appName'), parameters('environmentName')))]"
      ]
    }
  ]
}